console.log("'1' + 2 + 0 = 120");
// Так как у операций сложения одинаковый приоритет первым действием будет сложение строки "1" и числа 2,
//  и  "1" является строкой, то в соотвествии со спецификой js 2 тоже будет приведена к строке и будет произведена 
//  конкатенация строк "1" и "2", анологчно для строки "12" и числа 0
console.log('"1" - 1 + 2 = 2');
//При использовании бинарного оператора "-" операнды приводятся (если это возможно)  к числам.
//Далее происходит выполнение арифметических действий 1 - 1 = 0, 0 + 2 = 2.
console.log('true + false = 1');
//При использовании бинарного оператора "+" логические операнды преобразуются в числа true - 1, false - 0 
console.log('10 / "5" = 2');
//при использовании операторов "-","/","*" операнды преобразуются в числа и производятся арифметические операции
console.log('"2" * "3" = 6');
// 2 и 3 преобразуются в числа и премнажаются
console.log('4 + 5 + "px"');
// 4 и 5 арифметически складываются, число 9 преобразуется в строку и происходит конкатенация
console.log('"$" + 4 + 5');
// Первой происходит операция сложения строки "$" и числа 4, 
// после преобразования 4 в строку и конкатенации получаем строку "$4", анологично с 
// числом 5 и строкой "$4"
console.log('"42" - 2 = 20');
// 42 преобразуется в число происходит арифметическое вычитание
console.log('"4px" - 2 = NaN');
// При использовании бинарного операторы "-" происодит попытка преобразования 
// строки "4px" в число,так как попытка оканчивается неудачей компилятор выдает NaN
console.log('7 / 0 = Infinity');
// При делении числа на бесконечно малое число, мы получаем бесконечно большое число или бесконечность(Infinity)
console.log('"-9\n" + 5');
//Происходит  преобразование 5 в строку, затем конкатенация 
//Выводится строка "-9\n5" ,а так как \n особый сиимвол означающий
// переход на новую строку в конечном итоге 5 перейдет на следующую строку
console.log(' "-9\n" - 5');
// "-9\n" преобразуеся в число -9 и происходит арифметическое вычитание
console.log('5 && 2 = 2');
// происходит логическое сложение где 5  и 2 принимают значения  true
// при этом выводится последнее верное решение то есть 2
console.log('2 && 5 = 5');
// анологично с предыдущим примером только последнее верное решение 5
console.log('5 || 0 = 0');
// проиходит логическое умножение, и так как один из операндов
// принимает значение false то и решение принимает это же значение
console.log('0 || 5 = 0');
// анологично с предыдущим примером
console.log('null + 1 = 1');
// null преобразуется к числу и принимет значение 0
console.log('undefined + 1 = NaN');
// компилятор пытается преобразовать undefined  к числу, так как у него это 
// не получается он выводит NaN
console.log('null == "\n0\n"');
// строка не равна отделному типу null
console.log('+null == +"\n0\n"');
// +null преобразовываеться в число 0 и строка +"\n0\n" преобазовывается в число 0
// из-за унарного оператора "-" сравнение двух одинаковых чисел дает true

